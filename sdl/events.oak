link!("sdl/events.o");

let unit: struct;

let sdl_key_event_data: struct
{
    keycode: i128,
}

let sdl_mouse_move_event_data: struct
{
    x, y: i128,
}

let sdl_mouse_button_event_data: struct
{
    x, y: i128,
    code: i8,
}

let sdl_event: enum
{
    sdl_key_down_event: sdl_key_event_data,
    sdl_key_up_event: sdl_key_event_data,

    sdl_mouse_move_event: sdl_mouse_move_event_data,
    sdl_mouse_button_down_event: sdl_mouse_button_event_data,
    sdl_mouse_button_up_event: sdl_mouse_button_event_data,

    sdl_none: unit,
}

let Copy(self: ^sdl_event, other: sdl_event) -> void
{
    match (other)
    {
        case sdl_key_down_event(data)
        {
            wrap_sdl_key_down_event(self, ^data);
        }

        case sdl_key_up_event(data)
        {
            wrap_sdl_key_up_event(self, ^data);
        }

        case sdl_mouse_move_event(data)
        {
            wrap_sdl_mouse_move_event(self, ^data);
        }

        case sdl_mouse_button_down_event(data)
        {
            wrap_sdl_mouse_button_down_event(self, ^data);
        }

        case sdl_mouse_button_up_event(data)
        {
            wrap_sdl_mouse_button_up_event(self, ^data);
        }

        case sdl_none()
        {
            wrap_sdl_none(self);
        }
    }
}

let sdl_poll_event() -> sdl_event;
