// For testing Oak's generic structs
// Passed Aug 4, 23

package!("std");
use_rule!("std");

// Linked list node
let node<t>: struct
{
    data: t,
    next: ^node<t>,
}

let New<t>(self: ^node<t>) -> void
{
}

let AddEq<t>(self: ^node<t>, data: t) -> void
{
    alloc!(self.next);
    self.next.data = data;
}

let main() -> i32
{
    node<i32>;
    New<i32>;
    AddEq<i32>;
    Del<i32>;

    // Create a node
    let head: node<i32>;
    head += 2;

    head.data = 123;
    print(head.data);

    head..Del();

    0
}
