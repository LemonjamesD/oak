/*
Operation rules designed to replace the
op-sub stage of compilation in Oak.

Jordan Dehmel, 2023
jdehmel@outlook.com
*/

new_rule!(
    "copy",
    "$*a = $*b",
    "Copy ( $a , $b )"
);

new_rule!(
    "add_eq",
    "$*a += $*b",
    "AddEq ( $a , $b )"
);

new_rule!(
    "sub_eq",
    "$*a -= $*b",
    "SubEq ( $a , $b )"
);

new_rule!(
    "mult_eq",
    "$*a *= $*b",
    "MultEq ( $a , $b )"
);

new_rule!(
    "div_eq",
    "$*a /= $*b",
    "DivEq ( $a , $b )"
);

new_rule!(
    "mod_eq",
    "$*a %= $*b",
    "ModEq ( $a , $b )"
);

new_rule!(
    "and_eq",
    "$*a &= $*b",
    "AndEq ( $a , $b )"
);

new_rule!(
    "or_eq",
    "$*a |= $*b",
    "OrEq ( $a , $b )"
);

new_rule!(
    "andd",
    "( $*a && $*b )",
    "Andd ( $a , $b )"
);

new_rule!(
    "orr",
    "( $*a || $*b )",
    "Orr ( $a , $b )"
);

// ADVANCED EXPERIMENTAL RULE
new_rule!(
    "less",
    "( $*a < $^ $/[$>$] $>b )",
    "Less ( $a , $b )"
);

new_rule!(
    "great",
    "$*a > $*b",
    "Great ( $a , $b )"
);

new_rule!(
    "leq",
    "( $*a <= $*b )",
    "Leq ( $a , $b )"
);

new_rule!(
    "greq",
    "( $*a >= $*b )",
    "Greq ( $a , $b )"
);

new_rule!(
    "eq",
    "( $*a == $*b )",
    "Eq ( $a , $b )"
);

new_rule!(
    "neq",
    "( $*a != $*b )",
    "Neq ( $a , $b )"
);

new_rule!(
    "mult",
    "( $*a * $*b )",
    "Mult ( $a , $b )"
);

new_rule!(
    "div",
    "( $*a / $*b )",
    "Div ( $a , $b )"
);

new_rule!(
    "mod",
    "( $*a % $*b )",
    "Mod ( $a , $b )"
);

new_rule!(
    "add",
    "( $*a + $*b )",
    "Add ( $a , $b )"
);

new_rule!(
    "sub",
    "( $*a - $*b )",
    "Sub ( $a , $b )"
);

new_rule!(
    "lbs",
    "( $*a << $*b )",
    "Lbs ( $a , $b )"
);

new_rule!(
    "rbs",
    "( $*a >> $*b )",
    "Rbs ( $a , $b )"
);

new_rule!(
    "and",
    "( $*a & $*b )",
    "And ( $a , $b )"
);

new_rule!(
    "or",
    "( $*a | $*b )",
    "Or ( $a , $b )"
);

bundle_rule!(
    "ops",

    "copy",
    "add_eq",
    "sub_eq",
    "mult_eq",
    "div_eq",
    "mod_eq",
    "and_eq",
    "or_eq",
    
    "andd",
    "orr",
    // "less",
    "great",
    "leq",
    "greq",
    "eq",
    "neq",

    "mult",
    "div",
    "mod",

    "add",
    "sub",

    "and",
    "or",
    "lbs",
    "rbs"
);
