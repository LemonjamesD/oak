/*
Defines some terminal colors using escape codes
Jordan Dehmel, 2023
jdehmel@outlook.com
*/

include!("std/io_inter.oak");
include!("std/string.oak");

// Section-based stuff

let begin_red() -> void
{
    print("\033[0;31m");
}

let begin_green() -> void
{
    print("\033[0;32m");
}

let begin_blue() -> void
{
    print("\033[0;34m");
}

let begin_yellow() -> void
{
    print("\033[0;33m");
}

let begin_magenta() -> void
{
    print("\033[0;35m");
}

let begin_cyan() -> void
{
    print("\033[0;36m");
}

let begin_red_bold() -> void
{
    print("\033[1;31m");
}

let begin_green_bold() -> void
{
    print("\033[1;32m");
}

let begin_blue_bold() -> void
{
    print("\033[1;34m");
}

let begin_yellow_bold() -> void
{
    print("\033[1;33m");
}

let begin_magenta_bold() -> void
{
    print("\033[1;35m");
}

let begin_cyan_bold() -> void
{
    print("\033[1;36m");
}

let end_effects() -> void
{
    print("\033[0;0m");
}

// Regular colored text w/ reset code after

let red(on: string) -> string
{
    let out: string;
    out = "\033[0;31m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let green(on: string) -> string
{
    let out: string;
    out = "\033[0;32m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let blue(on: string) -> string
{
    let out: string;
    out = "\033[0;34m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let yellow(on: string) -> string
{
    let out: string;
    out = "\033[0;33m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let magenta(on: string) -> string
{
    let out: string;
    out = "\033[0;35m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let cyan(on: string) -> string
{
    let out: string;
    out = "\033[0;36m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

// Boldface versions

let red_bold(on: string) -> string
{
    let out: string;
    out = "\033[1;31m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let green_bold(on: string) -> string
{
    let out: string;
    out = "\033[1;32m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let blue_bold(on: string) -> string
{
    let out: string;
    out = "\033[1;34m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let yellow_bold(on: string) -> string
{
    let out: string;
    out = "\033[1;33m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let magenta_bold(on: string) -> string
{
    let out: string;
    out = "\033[1;35m";

    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

let cyan_bold(on: string) -> string
{
    let out: string;
    out = "\033[1;36m";
    
    let temp: string;
    temp = "\033[0;0m";

    out = out + on;
    out = out + temp;
    out
}

// Raw string literal versions

let red(on: str) -> string
{
    let out: string;
    out = on;

    out = red(out);
    out
}

let green(on: str) -> string
{
    let out: string;
    out = on;

    out = green(out);
    out
}

let blue(on: str) -> string
{
    let out: string;
    out = on;

    out = blue(out);
    out
}

let yellow(on: str) -> string
{
    let out: string;
    out = on;

    out = yellow(out);
    out
}

let magenta(on: str) -> string
{
    let out: string;
    out = on;

    out = magenta(out);
    out
}

let cyan(on: str) -> string
{
    let out: string;
    out = on;

    out = cyan(out);
    out
}

let red_bold(on: str) -> string
{
    let out: string;
    out = on;

    out = red_bold(out);
    out
}

let green_bold(on: str) -> string
{
    let out: string;
    out = on;

    out = green_bold(out);
    out
}

let blue_bold(on: str) -> string
{
    let out: string;
    out = on;

    out = blue_bold(out);
    out
}

let yellow_bold(on: str) -> string
{
    let out: string;
    out = on;

    out = yellow_bold(out);
    out
}

let magenta_bold(on: str) -> string
{
    let out: string;
    out = on;

    out = magenta_bold(out);
    out
}

let cyan_bold(on: str) -> string
{
    let out: string;
    out = on;

    out = cyan_bold(out);
    out
}
